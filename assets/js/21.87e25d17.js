(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{425:function(t,a,r){"use strict";r.r(a);var s=r(2),v=Object(s.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"代码块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#代码块"}},[t._v("#")]),t._v(" 代码块")]),t._v(" "),a("h3",{attrs:{id:"局部代码块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#局部代码块"}},[t._v("#")]),t._v(" 局部代码块")]),t._v(" "),a("p",[t._v("在方法中出现，可以限定变量生命周期，及早释放，提高内存利用率")]),t._v(" "),a("h3",{attrs:{id:"构造代码块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#构造代码块"}},[t._v("#")]),t._v(" 构造代码块")]),t._v(" "),a("p",[t._v("在类中方法外出现，每次调用构造方法都会执行，并且在构造方法前执行。")]),t._v(" "),a("h3",{attrs:{id:"构造代码块与构造函数的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#构造代码块与构造函数的区别"}},[t._v("#")]),t._v(" "),a("strong",[t._v("构造代码块与构造函数的区别")]),t._v("：")]),t._v(" "),a("p",[t._v("构造代码块是给所有对象进行统一初始化，而构造函数是给对应的对象初始化，因为构造函数是可以多个的，运行哪个构造函数就会建立什么样的对象，但无论建立哪个对象，都会先执行相同的构造代码块。")]),t._v(" "),a("h3",{attrs:{id:"同步代码块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#同步代码块"}},[t._v("#")]),t._v(" 同步代码块")]),t._v(" "),a("p",[t._v("同步代码块指的是被Java中Synchronized关键词修饰的代码块，在Java中，Synchronized关键词不仅仅可以用来修饰代码块，与此同时也可以用来修饰方法，是一种线程同步机制，被Synchronized关键词修饰的代码块会被加上内置锁。")]),t._v(" "),a("p",[t._v("需要说明的是Synchronized同步代码块是一种高开销的操作，因此我们应该尽量减少被同步的内容，在很多场景，我们没有必要去同步整个方法，而只需要同步部分代码即可，也就是使用同步代码块（JDK源码中有很多应用）。")]),t._v(" "),a("h3",{attrs:{id:"静态代码块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#静态代码块"}},[t._v("#")]),t._v(" 静态代码块")]),t._v(" "),a("p",[t._v("在类中方法外出现，并加上static修饰，常用于给类进行初始化，在加载的时候就执行，并且静态代码块执行一次。")]),t._v(" "),a("h3",{attrs:{id:"代码块执行顺序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#代码块执行顺序"}},[t._v("#")]),t._v(" 代码块执行顺序")]),t._v(" "),a("p",[t._v("静态代码块：在类加载JVM时初始化，且只被执行一次；常用来执行类属性的初始化；静态块优先于各种代码块以及构造函数；此外静态代码块不能访问普通变量。")]),t._v(" "),a("p",[t._v("构造代码块：每次调用构造方法，构造代码块都执行一次；构造代码块优先于构造函数执行；同时构造代码块的运行依赖于构造函数。")]),t._v(" "),a("p",[t._v("父类静态块 ==> 子类静态块 ==> 父类代码块 ==> 父类构造器 ==> 子类代码块 ==> 子类构造器 。")])])}),[],!1,null,null,null);a.default=v.exports}}]);